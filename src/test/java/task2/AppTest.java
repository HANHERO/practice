package task2;

import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.assertEquals;

public class AppTest {
    private final ArrayList<TestScenario> testScenarios = new ArrayList<>();

    private void setUpScenarios() {
        int min = 1;
        int max = Integer.MAX_VALUE;
        ///////////////////////////////////////1 Граничные значения области определения.
        s(1, 1, min, max, min);
        s(1, 1, min, 46341, 46340);
        s(1, 1, min, min + 1, min);
        s(1, 1, min, min, min);
        s(1, 1, min, min, min + 1);
        s(1, 1, min, 46340, 46341);
        s(1, 1, min, min, max);


        ////////////////////////////////////////2 Классы эквивалентности
        ////////////////////////////////////////2.1 Границы классов эквивалентности

        s(3, 2, 36, 5, 5);
        s(3, 2, 40, 5, 5);
        s(1, 2, 26, 5, 5);
        s(5, 2, 50, 5, 5);


        ////////////////////////////////////////2.2 Впритык слева и справа от грацницы

        s(2, 2, 35, 5, 5);
        s(3, 2, 37, 5, 5);
        s(3, 2, 39, 5, 5);
        s(4, 2, 41, 5, 5);

        s(5, 1, 25, 5, 5);
        s(1, 2, 27, 5, 5);
        s(5, 2, 50, 5, 5);
        s(1, 3, 51, 5, 5);

        ////////////////////////////////////////2.3 Внутри класса эквивалентности
        s(3, 2, 37, 5, 5);
        s(3, 2, 38, 5, 5);
        s(3, 2, 39, 5, 5);

        s(1, 2, 27, 5, 5);
        s(1, 2, 28, 5, 5);
        s(1, 2, 29, 5, 5);
        s(4, 2, 42, 5, 5);
        s(4, 2, 43, 5, 5);
        s(4, 2, 44, 5, 5);
        s(4, 2, 45, 5, 5);
        s(2, 2, 32, 5, 5);
        s(2, 2, 33, 5, 5);
        s(2, 2, 34, 5, 5);
        s(2, 2, 35, 5, 5);
        s(5, 2, 49, 5, 5);

        ////////////////////////////////////////3. Предметная область
        s(1, 1, 1, 6, 9);
        s(1, 1, 2, 6, 9);
        s(1, 1, 3, 6, 9);
        s(1, 1, 4, 6, 9);
        s(1, 1, 5, 6, 9);
        s(1, 1, 6, 6, 9);
        s(2, 1, 7, 6, 9);
        s(2, 1, 8, 6, 9);
        s(2, 1, 9, 6, 9);
        s(2, 1, 10, 6, 9);
        s(2, 1, 11, 6, 9);
        s(2, 1, 12, 6, 9);
        s(3, 1, 13, 6, 9);
        s(3, 1, 14, 6, 9);
        s(3, 1, 15, 6, 9);
        s(3, 1, 16, 6, 9);
        s(3, 1, 17, 6, 9);
        s(3, 1, 18, 6, 9);
        s(4, 1, 19, 6, 9);
        s(4, 1, 20, 6, 9);
        s(4, 1, 21, 6, 9);
        s(4, 1, 22, 6, 9);
        s(4, 1, 23, 6, 9);
        s(4, 1, 24, 6, 9);
        s(5, 1, 25, 6, 9);
        s(5, 1, 26, 6, 9);
        s(5, 1, 27, 6, 9);
        s(5, 1, 28, 6, 9);
        s(5, 1, 29, 6, 9);
        s(5, 1, 30, 6, 9);
        s(6, 1, 31, 6, 9);
        s(6, 1, 32, 6, 9);
        s(6, 1, 33, 6, 9);
        s(6, 1, 34, 6, 9);
        s(6, 1, 35, 6, 9);
        s(6, 1, 36, 6, 9);
        s(7, 1, 37, 6, 9);
        s(7, 1, 38, 6, 9);
        s(7, 1, 39, 6, 9);
        s(7, 1, 40, 6, 9);
        s(7, 1, 41, 6, 9);
        s(7, 1, 42, 6, 9);
        s(8, 1, 43, 6, 9);
        s(8, 1, 44, 6, 9);
        s(8, 1, 45, 6, 9);
        s(8, 1, 46, 6, 9);
        s(8, 1, 47, 6, 9);
        s(8, 1, 48, 6, 9);
        s(9, 1, 49, 6, 9);
        s(9, 1, 50, 6, 9);
        s(9, 1, 51, 6, 9);
        s(9, 1, 52, 6, 9);
        s(9, 1, 53, 6, 9);
        s(9, 1, 54, 6, 9);
        s(1, 2, 55, 6, 9);
        s(1, 2, 56, 6, 9);
        s(1, 2, 57, 6, 9);
        s(1, 2, 58, 6, 9);
        s(1, 2, 59, 6, 9);
        s(1, 2, 60, 6, 9);
        s(2, 2, 61, 6, 9);
        s(2, 2, 62, 6, 9);
        s(2, 2, 63, 6, 9);
        s(2, 2, 64, 6, 9);
        s(2, 2, 65, 6, 9);
        s(2, 2, 66, 6, 9);
        s(3, 2, 67, 6, 9);
        s(3, 2, 68, 6, 9);
        s(3, 2, 69, 6, 9);
        s(3, 2, 70, 6, 9);
        s(3, 2, 71, 6, 9);
        s(3, 2, 72, 6, 9);
        s(4, 2, 73, 6, 9);
        s(4, 2, 74, 6, 9);
        s(4, 2, 75, 6, 9);
        s(4, 2, 76, 6, 9);
        s(4, 2, 77, 6, 9);
        s(4, 2, 78, 6, 9);
        s(5, 2, 79, 6, 9);
        s(5, 2, 80, 6, 9);
        s(5, 2, 81, 6, 9);
        s(5, 2, 82, 6, 9);
        s(5, 2, 83, 6, 9);
        s(5, 2, 84, 6, 9);
        s(6, 2, 85, 6, 9);
        s(6, 2, 86, 6, 9);
        s(6, 2, 87, 6, 9);
        s(6, 2, 88, 6, 9);
        s(6, 2, 89, 6, 9);
        s(6, 2, 90, 6, 9);
        s(7, 2, 91, 6, 9);
        s(7, 2, 92, 6, 9);
        s(7, 2, 93, 6, 9);
        s(7, 2, 94, 6, 9);
        s(7, 2, 95, 6, 9);
        s(7, 2, 96, 6, 9);
        s(8, 2, 97, 6, 9);
        s(8, 2, 98, 6, 9);
        s(8, 2, 99, 6, 9);
        s(8, 2, 100, 6, 9);
        s(8, 2, 101, 6, 9);
        s(8, 2, 102, 6, 9);
        s(9, 2, 103, 6, 9);
        s(9, 2, 104, 6, 9);
        s(9, 2, 105, 6, 9);
        s(9, 2, 106, 6, 9);
        s(9, 2, 107, 6, 9);
        s(9, 2, 108, 6, 9);

        s(2, 4, 113, 4, 9);
        s(1, 3, 44, 4, 5);
        s(5, 2, 56, 4, 9);
        s(9, 9, 322, 4, 9);
        ////////////////////////////////////////4. Реализация

        ///////////////////////////////////////5. Случайные значения
        s(1, 10, 30, 3, 1);
        s(1, 6, 44, 4, 2);
        s(1, 3, 56, 8, 3);
        s(4, 1, 25, 7, 4);
        s(5, 1, 108, 22, 5);
        s(3, 1, 113, 45, 6);
        s(1, 1, 44, 52, 7);
        s(5, 1, 56, 12, 8);
        s(1, 2, 322, 33, 9);
        s(2, 1, 99, 85, 10);
        s(6, 1, 113, 21, 11);
        s(11, 1, 44, 4, 12);
        s(4, 1, 46, 12, 13);
        s(2, 2, 322, 70, 3);
        s(15, 1, 115, 8, 15);
        s(3, 1, 13, 6, 6);
        s(1, 3, 53, 20, 1);
        s(5, 1, 65, 15, 5);
        s(3, 1, 32, 11, 19);
        s(6, 1, 76, 13, 8);
        s(2, 1, 12, 6, 5);
        s(1, 2, 40, 4, 9);
        s(3, 1, 15, 5, 10);
        s(2, 4, 24, 3, 2);
        s(4, 1, 16, 4, 4);
        ///////////////////////////////////////6. Другие особые значения
        s(2, 25, 99, 2, 2);
        s(2, 49, 98, 1, 2);
    }

    private void s(int et, int pod, int n, int nA, int p) {
        testScenarios.add(new TestScenario(et + " этаж, " + pod + " подъезд.", n, nA, p));
    }

    @Test
    public void start() {
        setUpScenarios();
        for (TestScenario tS : testScenarios) {
            assertEquals(tS.e, App.d(tS.apNum, tS.apps, tS.floors));
        }
        //System.out.println(testScenarios.size());
    }
}