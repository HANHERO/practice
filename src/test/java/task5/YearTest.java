package task5;

import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertEquals;
import static task5.Year.main;

public class YearTest {

    @Test
    public void runScenarios() {
        String pn = "MONDAY";
        String vt = "TUESDAY";
        String sr = "WEDNESDAY";
        String ch = "THURSDAY";
        String pt = "FRIDAY";
        String sb = "SATURDAY";
        String vs = "SUNDAY";
        ////////////////////////////////1. Граничные значения области определения
        validParamsTest(pn, 1, 1, 1);
        validParamsTest(sr, 1, 31, 1);
        validParamsTest(ch, 1, 1, 2);
        validParamsTest(sr, 1, 28, 2);
        validParamsTest(ch, 1, 1, 3);
        validParamsTest(sb, 1, 31, 3);
        validParamsTest(vs, 1, 1, 4);
        validParamsTest(pn, 1, 30, 4);
        validParamsTest(vt, 1, 1, 5);
        validParamsTest(ch, 1, 31, 5);
        validParamsTest(pt, 1, 1, 6);
        validParamsTest(sb, 1, 30, 6);
        validParamsTest(vs, 1, 1, 7);
        validParamsTest(vt, 1, 31, 7);
        validParamsTest(sr, 1, 1, 8);
        validParamsTest(pt, 1, 31, 8);
        validParamsTest(sb, 1, 1, 9);
        validParamsTest(vs, 1, 30, 9);
        validParamsTest(pn, 1, 1, 10);
        validParamsTest(sr, 1, 31, 10);
        validParamsTest(ch, 1, 1, 11);
        validParamsTest(pt, 1, 30, 11);
        validParamsTest(sb, 1, 1, 12);
        validParamsTest(pn, 1, 31, 12);

        validParamsTest(vs, 7, 1, 1);
        validParamsTest(vt, 7, 31, 1);
        validParamsTest(sr, 7, 1, 2);
        validParamsTest(vt, 7, 28, 2);
        validParamsTest(sr, 7, 1, 3);
        validParamsTest(pt, 7, 31, 3);
        validParamsTest(sb, 7, 1, 4);
        validParamsTest(vs, 7, 30, 4);
        validParamsTest(pn, 7, 1, 5);
        validParamsTest(sr, 7, 31, 5);
        validParamsTest(ch, 7, 1, 6);
        validParamsTest(pt, 7, 30, 6);
        validParamsTest(sb, 7, 1, 7);
        validParamsTest(pn, 7, 31, 7);
        validParamsTest(vt, 7, 1, 8);
        validParamsTest(ch, 7, 31, 8);
        validParamsTest(pt, 7, 1, 9);
        validParamsTest(sb, 7, 30, 9);
        validParamsTest(vs, 7, 1, 10);
        validParamsTest(vt, 7, 31, 10);
        validParamsTest(sr, 7, 1, 11);
        validParamsTest(ch, 7, 30, 11);
        validParamsTest(pt, 7, 1, 12);
        validParamsTest(vs, 7, 31, 12);

        validParamsTest(pn, 1, 1, 1);
        validParamsTest(sr, 1, 31, 1);
        validParamsTest(vt, 2, 1, 1);
        validParamsTest(ch, 2, 31, 1);
        validParamsTest(sr, 3, 1, 1);
        validParamsTest(pt, 3, 31, 1);
        validParamsTest(ch, 4, 1, 1);
        validParamsTest(sb, 4, 31, 1);
        validParamsTest(pt, 5, 1, 1);
        validParamsTest(vs, 5, 31, 1);
        validParamsTest(sb, 6, 1, 1);
        validParamsTest(pn, 6, 31, 1);
        validParamsTest(vs, 7, 1, 1);
        validParamsTest(vt, 7, 31, 1);

        validParamsTest(sb, 1, 1, 12);
        validParamsTest(pn, 1, 31, 12);
        validParamsTest(vs, 2, 1, 12);
        validParamsTest(vt, 2, 31, 12);
        validParamsTest(pn, 3, 1, 12);
        validParamsTest(sr, 3, 31, 12);
        validParamsTest(vt, 4, 1, 12);
        validParamsTest(ch, 4, 31, 12);
        validParamsTest(sr, 5, 1, 12);
        validParamsTest(pt, 5, 31, 12);
        validParamsTest(ch, 6, 1, 12);
        validParamsTest(sb, 6, 31, 12);
        validParamsTest(pt, 7, 1, 12);
        validParamsTest(vs, 7, 31, 12);
        //////////////////////////////////2. Классы эквивалентности
        //////////////////////////////////2.1 Границы классов эквивалентности
        validParamsTest(pn, 1, 1, 1);
        validParamsTest(sr, 1, 31, 1);
        validParamsTest(ch, 1, 1, 2);
        validParamsTest(sr, 1, 28, 2);
        validParamsTest(ch, 1, 1, 3);
        validParamsTest(sb, 1, 31, 3);
        validParamsTest(vs, 1, 1, 4);
        validParamsTest(pn, 1, 30, 4);
        validParamsTest(vt, 1, 1, 5);
        validParamsTest(ch, 1, 31, 5);
        validParamsTest(pt, 1, 1, 6);
        validParamsTest(sb, 1, 30, 6);
        validParamsTest(vs, 1, 1, 7);
        validParamsTest(vt, 1, 31, 7);
        validParamsTest(sr, 1, 1, 8);
        validParamsTest(pt, 1, 31, 8);
        validParamsTest(sb, 1, 1, 9);
        validParamsTest(vs, 1, 30, 9);
        validParamsTest(pn, 1, 1, 10);
        validParamsTest(sr, 1, 31, 10);
        validParamsTest(ch, 1, 1, 11);
        validParamsTest(pt, 1, 30, 11);
        validParamsTest(sb, 1, 1, 12);
        validParamsTest(pn, 1, 31, 12);

        validParamsTest(vt, 2, 1, 1);
        validParamsTest(ch, 2, 31, 1);
        validParamsTest(pt, 2, 1, 2);
        validParamsTest(ch, 2, 28, 2);
        validParamsTest(pt, 2, 1, 3);
        validParamsTest(vs, 2, 31, 3);
        validParamsTest(pn, 2, 1, 4);
        validParamsTest(vt, 2, 30, 4);
        validParamsTest(sr, 2, 1, 5);
        validParamsTest(pt, 2, 31, 5);
        validParamsTest(sb, 2, 1, 6);
        validParamsTest(vs, 2, 30, 6);
        validParamsTest(pn, 2, 1, 7);
        validParamsTest(sr, 2, 31, 7);
        validParamsTest(ch, 2, 1, 8);
        validParamsTest(sb, 2, 31, 8);
        validParamsTest(vs, 2, 1, 9);
        validParamsTest(pn, 2, 30, 9);
        validParamsTest(vt, 2, 1, 10);
        validParamsTest(ch, 2, 31, 10);
        validParamsTest(pt, 2, 1, 11);
        validParamsTest(sb, 2, 30, 11);
        validParamsTest(vs, 2, 1, 12);
        validParamsTest(vt, 2, 31, 12);

        validParamsTest(sr, 3, 1, 1);
        validParamsTest(pt, 3, 31, 1);
        validParamsTest(sb, 3, 1, 2);
        validParamsTest(pt, 3, 28, 2);
        validParamsTest(sb, 3, 1, 3);
        validParamsTest(pn, 3, 31, 3);
        validParamsTest(vt, 3, 1, 4);
        validParamsTest(sr, 3, 30, 4);
        validParamsTest(ch, 3, 1, 5);
        validParamsTest(sb, 3, 31, 5);
        validParamsTest(vs, 3, 1, 6);
        validParamsTest(pn, 3, 30, 6);
        validParamsTest(vt, 3, 1, 7);
        validParamsTest(ch, 3, 31, 7);
        validParamsTest(pt, 3, 1, 8);
        validParamsTest(vs, 3, 31, 8);
        validParamsTest(pn, 3, 1, 9);
        validParamsTest(vt, 3, 30, 9);
        validParamsTest(sr, 3, 1, 10);
        validParamsTest(pt, 3, 31, 10);
        validParamsTest(sb, 3, 1, 11);
        validParamsTest(vs, 3, 30, 11);
        validParamsTest(pn, 3, 1, 12);
        validParamsTest(sr, 3, 31, 12);

        validParamsTest(ch, 4, 1, 1);
        validParamsTest(sb, 4, 31, 1);
        validParamsTest(vs, 4, 1, 2);
        validParamsTest(sb, 4, 28, 2);
        validParamsTest(vs, 4, 1, 3);
        validParamsTest(vt, 4, 31, 3);
        validParamsTest(sr, 4, 1, 4);
        validParamsTest(ch, 4, 30, 4);
        validParamsTest(pt, 4, 1, 5);
        validParamsTest(vs, 4, 31, 5);
        validParamsTest(pn, 4, 1, 6);
        validParamsTest(vt, 4, 30, 6);
        validParamsTest(sr, 4, 1, 7);
        validParamsTest(pt, 4, 31, 7);
        validParamsTest(sb, 4, 1, 8);
        validParamsTest(pn, 4, 31, 8);
        validParamsTest(vt, 4, 1, 9);
        validParamsTest(sr, 4, 30, 9);
        validParamsTest(ch, 4, 1, 10);
        validParamsTest(sb, 4, 31, 10);
        validParamsTest(vs, 4, 1, 11);
        validParamsTest(pn, 4, 30, 11);
        validParamsTest(vt, 4, 1, 12);
        validParamsTest(ch, 4, 31, 12);

        validParamsTest(pt, 5, 1, 1);
        validParamsTest(vs, 5, 31, 1);
        validParamsTest(pn, 5, 1, 2);
        validParamsTest(vs, 5, 28, 2);
        validParamsTest(pn, 5, 1, 3);
        validParamsTest(sr, 5, 31, 3);
        validParamsTest(ch, 5, 1, 4);
        validParamsTest(pt, 5, 30, 4);
        validParamsTest(sb, 5, 1, 5);
        validParamsTest(pn, 5, 31, 5);
        validParamsTest(vt, 5, 1, 6);
        validParamsTest(sr, 5, 30, 6);
        validParamsTest(ch, 5, 1, 7);
        validParamsTest(sb, 5, 31, 7);
        validParamsTest(vs, 5, 1, 8);
        validParamsTest(vt, 5, 31, 8);
        validParamsTest(sr, 5, 1, 9);
        validParamsTest(ch, 5, 30, 9);
        validParamsTest(pt, 5, 1, 10);
        validParamsTest(vs, 5, 31, 10);
        validParamsTest(pn, 5, 1, 11);
        validParamsTest(vt, 5, 30, 11);
        validParamsTest(sr, 5, 1, 12);
        validParamsTest(pt, 5, 31, 12);

        validParamsTest(sb, 6, 1, 1);
        validParamsTest(pn, 6, 31, 1);
        validParamsTest(vt, 6, 1, 2);
        validParamsTest(pn, 6, 28, 2);
        validParamsTest(vt, 6, 1, 3);
        validParamsTest(ch, 6, 31, 3);
        validParamsTest(pt, 6, 1, 4);
        validParamsTest(sb, 6, 30, 4);
        validParamsTest(vs, 6, 1, 5);
        validParamsTest(vt, 6, 31, 5);
        validParamsTest(sr, 6, 1, 6);
        validParamsTest(ch, 6, 30, 6);
        validParamsTest(pt, 6, 1, 7);
        validParamsTest(vs, 6, 31, 7);
        validParamsTest(pn, 6, 1, 8);
        validParamsTest(sr, 6, 31, 8);
        validParamsTest(ch, 6, 1, 9);
        validParamsTest(pt, 6, 30, 9);
        validParamsTest(sb, 6, 1, 10);
        validParamsTest(pn, 6, 31, 10);
        validParamsTest(vt, 6, 1, 11);
        validParamsTest(sr, 6, 30, 11);
        validParamsTest(ch, 6, 1, 12);
        validParamsTest(sb, 6, 31, 12);

        validParamsTest(vs, 7, 1, 1);
        validParamsTest(vt, 7, 31, 1);
        validParamsTest(sr, 7, 1, 2);
        validParamsTest(vt, 7, 28, 2);
        validParamsTest(sr, 7, 1, 3);
        validParamsTest(pt, 7, 31, 3);
        validParamsTest(sb, 7, 1, 4);
        validParamsTest(vs, 7, 30, 4);
        validParamsTest(pn, 7, 1, 5);
        validParamsTest(sr, 7, 31, 5);
        validParamsTest(ch, 7, 1, 6);
        validParamsTest(pt, 7, 30, 6);
        validParamsTest(sb, 7, 1, 7);
        validParamsTest(pn, 7, 31, 7);
        validParamsTest(vt, 7, 1, 8);
        validParamsTest(ch, 7, 31, 8);
        validParamsTest(pt, 7, 1, 9);
        validParamsTest(sb, 7, 30, 9);
        validParamsTest(vs, 7, 1, 10);
        validParamsTest(vt, 7, 31, 10);
        validParamsTest(sr, 7, 1, 11);
        validParamsTest(ch, 7, 30, 11);
        validParamsTest(pt, 7, 1, 12);
        validParamsTest(vs, 7, 31, 12);
        ////////////////////////////////////2.2 Впритык слева и справа от границы
        validParamsTest(pn, 1, 1, 1);
        validParamsTest(ch, 1, 1, 2);
        validParamsTest(ch, 1, 1, 3);
        validParamsTest(vs, 1, 1, 4);
        validParamsTest(vt, 1, 1, 5);
        validParamsTest(pt, 1, 1, 6);
        validParamsTest(vs, 1, 1, 7);
        validParamsTest(sr, 1, 1, 8);
        validParamsTest(sb, 1, 1, 9);
        validParamsTest(pn, 1, 1, 10);
        validParamsTest(ch, 1, 1, 11);
        validParamsTest(sb, 1, 1, 12);

        validParamsTest(vt, 2, 1, 1);
        validParamsTest(pt, 2, 1, 2);
        validParamsTest(pt, 2, 1, 3);
        validParamsTest(pn, 2, 1, 4);
        validParamsTest(sr, 2, 1, 5);
        validParamsTest(sb, 2, 1, 6);
        validParamsTest(pn, 2, 1, 7);
        validParamsTest(ch, 2, 1, 8);
        validParamsTest(vs, 2, 1, 9);
        validParamsTest(vt, 2, 1, 10);
        validParamsTest(pt, 2, 1, 11);
        validParamsTest(vs, 2, 1, 12);

        validParamsTest(sr, 3, 1, 1);
        validParamsTest(sb, 3, 1, 2);
        validParamsTest(sb, 3, 1, 3);
        validParamsTest(vt, 3, 1, 4);
        validParamsTest(ch, 3, 1, 5);
        validParamsTest(vs, 3, 1, 6);
        validParamsTest(vt, 3, 1, 7);
        validParamsTest(pt, 3, 1, 8);
        validParamsTest(pn, 3, 1, 9);
        validParamsTest(sr, 3, 1, 10);
        validParamsTest(sb, 3, 1, 11);
        validParamsTest(pn, 3, 1, 12);

        validParamsTest(ch, 4, 1, 1);
        validParamsTest(vs, 4, 1, 2);
        validParamsTest(vs, 4, 1, 3);
        validParamsTest(sr, 4, 1, 4);
        validParamsTest(pt, 4, 1, 5);
        validParamsTest(pn, 4, 1, 6);
        validParamsTest(sr, 4, 1, 7);
        validParamsTest(sb, 4, 1, 8);
        validParamsTest(vt, 4, 1, 9);
        validParamsTest(ch, 4, 1, 10);
        validParamsTest(vs, 4, 1, 11);
        validParamsTest(vt, 4, 1, 12);

        validParamsTest(pt, 5, 1, 1);
        validParamsTest(pn, 5, 1, 2);
        validParamsTest(pn, 5, 1, 3);
        validParamsTest(ch, 5, 1, 4);
        validParamsTest(sb, 5, 1, 5);
        validParamsTest(vt, 5, 1, 6);
        validParamsTest(ch, 5, 1, 7);
        validParamsTest(vs, 5, 1, 8);
        validParamsTest(sr, 5, 1, 9);
        validParamsTest(pt, 5, 1, 10);
        validParamsTest(pn, 5, 1, 11);
        validParamsTest(sr, 5, 1, 12);

        validParamsTest(sb, 6, 1, 1);
        validParamsTest(vt, 6, 1, 2);
        validParamsTest(vt, 6, 1, 3);
        validParamsTest(pt, 6, 1, 4);
        validParamsTest(vs, 6, 1, 5);
        validParamsTest(sr, 6, 1, 6);
        validParamsTest(pt, 6, 1, 7);
        validParamsTest(pn, 6, 1, 8);
        validParamsTest(ch, 6, 1, 9);
        validParamsTest(sb, 6, 1, 10);
        validParamsTest(vt, 6, 1, 11);
        validParamsTest(ch, 6, 1, 12);

        validParamsTest(vs, 7, 1, 1);
        validParamsTest(sr, 7, 1, 2);
        validParamsTest(sr, 7, 1, 3);
        validParamsTest(sb, 7, 1, 4);
        validParamsTest(pn, 7, 1, 5);
        validParamsTest(ch, 7, 1, 6);
        validParamsTest(sb, 7, 1, 7);
        validParamsTest(vt, 7, 1, 8);
        validParamsTest(pt, 7, 1, 9);
        validParamsTest(vs, 7, 1, 10);
        validParamsTest(sr, 7, 1, 11);
        validParamsTest(pt, 7, 1, 12);

        validParamsTest(vt, 1, 2, 1);
        validParamsTest(pt, 1, 2, 2);
        validParamsTest(pt, 1, 2, 3);
        validParamsTest(pn, 1, 2, 4);
        validParamsTest(sr, 1, 2, 5);
        validParamsTest(sb, 1, 2, 6);
        validParamsTest(pn, 1, 2, 7);
        validParamsTest(ch, 1, 2, 8);
        validParamsTest(vs, 1, 2, 9);
        validParamsTest(vt, 1, 2, 10);
        validParamsTest(pt, 1, 2, 11);
        validParamsTest(vs, 1, 2, 12);

        validParamsTest(sr, 2, 2, 1);
        validParamsTest(sb, 2, 2, 2);
        validParamsTest(sb, 2, 2, 3);
        validParamsTest(vt, 2, 2, 4);
        validParamsTest(ch, 2, 2, 5);
        validParamsTest(vs, 2, 2, 6);
        validParamsTest(vt, 2, 2, 7);
        validParamsTest(pt, 2, 2, 8);
        validParamsTest(pn, 2, 2, 9);
        validParamsTest(sr, 2, 2, 10);
        validParamsTest(sb, 2, 2, 11);
        validParamsTest(pn, 2, 2, 12);

        validParamsTest(ch, 3, 2, 1);
        validParamsTest(vs, 3, 2, 2);
        validParamsTest(vs, 3, 2, 3);
        validParamsTest(sr, 3, 2, 4);
        validParamsTest(pt, 3, 2, 5);
        validParamsTest(pn, 3, 2, 6);
        validParamsTest(sr, 3, 2, 7);
        validParamsTest(sb, 3, 2, 8);
        validParamsTest(vt, 3, 2, 9);
        validParamsTest(ch, 3, 2, 10);
        validParamsTest(vs, 3, 2, 11);
        validParamsTest(vt, 3, 2, 12);

        validParamsTest(pt, 4, 2, 1);
        validParamsTest(pn, 4, 2, 2);
        validParamsTest(pn, 4, 2, 3);
        validParamsTest(ch, 4, 2, 4);
        validParamsTest(sb, 4, 2, 5);
        validParamsTest(vt, 4, 2, 6);
        validParamsTest(ch, 4, 2, 7);
        validParamsTest(vs, 4, 2, 8);
        validParamsTest(sr, 4, 2, 9);
        validParamsTest(pt, 4, 2, 10);
        validParamsTest(pn, 4, 2, 11);
        validParamsTest(sr, 4, 2, 12);

        validParamsTest(sb, 5, 2, 1);
        validParamsTest(vt, 5, 2, 2);
        validParamsTest(vt, 5, 2, 3);
        validParamsTest(pt, 5, 2, 4);
        validParamsTest(vs, 5, 2, 5);
        validParamsTest(sr, 5, 2, 6);
        validParamsTest(pt, 5, 2, 7);
        validParamsTest(pn, 5, 2, 8);
        validParamsTest(ch, 5, 2, 9);
        validParamsTest(sb, 5, 2, 10);
        validParamsTest(vt, 5, 2, 11);
        validParamsTest(ch, 5, 2, 12);

        validParamsTest(vs, 6, 2, 1);
        validParamsTest(sr, 6, 2, 2);
        validParamsTest(sr, 6, 2, 3);
        validParamsTest(sb, 6, 2, 4);
        validParamsTest(pn, 6, 2, 5);
        validParamsTest(ch, 6, 2, 6);
        validParamsTest(sb, 6, 2, 7);
        validParamsTest(vt, 6, 2, 8);
        validParamsTest(pt, 6, 2, 9);
        validParamsTest(vs, 6, 2, 10);
        validParamsTest(sr, 6, 2, 11);
        validParamsTest(pt, 6, 2, 12);

        validParamsTest(pn, 7, 2, 1);
        validParamsTest(ch, 7, 2, 2);
        validParamsTest(ch, 7, 2, 3);
        validParamsTest(vs, 7, 2, 4);
        validParamsTest(vt, 7, 2, 5);
        validParamsTest(pt, 7, 2, 6);
        validParamsTest(vs, 7, 2, 7);
        validParamsTest(sr, 7, 2, 8);
        validParamsTest(sb, 7, 2, 9);
        validParamsTest(pn, 7, 2, 10);
        validParamsTest(ch, 7, 2, 11);
        validParamsTest(sb, 7, 2, 12);

        validParamsTest(sr, 1, 31, 1);
        validParamsTest(sr, 1, 28, 2);
        validParamsTest(sb, 1, 31, 3);
        validParamsTest(pn, 1, 30, 4);
        validParamsTest(ch, 1, 31, 5);
        validParamsTest(sb, 1, 30, 6);
        validParamsTest(vt, 1, 31, 7);
        validParamsTest(pt, 1, 31, 8);
        validParamsTest(vs, 1, 30, 9);
        validParamsTest(sr, 1, 31, 10);
        validParamsTest(pt, 1, 30, 11);
        validParamsTest(pn, 1, 31, 12);

        validParamsTest(ch, 2, 31, 1);
        validParamsTest(ch, 2, 28, 2);
        validParamsTest(vs, 2, 31, 3);
        validParamsTest(vt, 2, 30, 4);
        validParamsTest(pt, 2, 31, 5);
        validParamsTest(vs, 2, 30, 6);
        validParamsTest(sr, 2, 31, 7);
        validParamsTest(sb, 2, 31, 8);
        validParamsTest(pn, 2, 30, 9);
        validParamsTest(ch, 2, 31, 10);
        validParamsTest(sb, 2, 30, 11);
        validParamsTest(vt, 2, 31, 12);

        validParamsTest(pt, 3, 31, 1);
        validParamsTest(pt, 3, 28, 2);
        validParamsTest(pn, 3, 31, 3);
        validParamsTest(sr, 3, 30, 4);
        validParamsTest(sb, 3, 31, 5);
        validParamsTest(pn, 3, 30, 6);
        validParamsTest(ch, 3, 31, 7);
        validParamsTest(vs, 3, 31, 8);
        validParamsTest(vt, 3, 30, 9);
        validParamsTest(pt, 3, 31, 10);
        validParamsTest(vs, 3, 30, 11);
        validParamsTest(sr, 3, 31, 12);

        validParamsTest(sb, 4, 31, 1);
        validParamsTest(sb, 4, 28, 2);
        validParamsTest(vt, 4, 31, 3);
        validParamsTest(ch, 4, 30, 4);
        validParamsTest(vs, 4, 31, 5);
        validParamsTest(vt, 4, 30, 6);
        validParamsTest(pt, 4, 31, 7);
        validParamsTest(pn, 4, 31, 8);
        validParamsTest(sr, 4, 30, 9);
        validParamsTest(sb, 4, 31, 10);
        validParamsTest(pn, 4, 30, 11);
        validParamsTest(ch, 4, 31, 12);

        validParamsTest(vs, 5, 31, 1);
        validParamsTest(vs, 5, 28, 2);
        validParamsTest(sr, 5, 31, 3);
        validParamsTest(pt, 5, 30, 4);
        validParamsTest(pn, 5, 31, 5);
        validParamsTest(sr, 5, 30, 6);
        validParamsTest(sb, 5, 31, 7);
        validParamsTest(vt, 5, 31, 8);
        validParamsTest(ch, 5, 30, 9);
        validParamsTest(vs, 5, 31, 10);
        validParamsTest(vt, 5, 30, 11);
        validParamsTest(pt, 5, 31, 12);

        validParamsTest(pn, 6, 31, 1);
        validParamsTest(pn, 6, 28, 2);
        validParamsTest(ch, 6, 31, 3);
        validParamsTest(sb, 6, 30, 4);
        validParamsTest(vt, 6, 31, 5);
        validParamsTest(ch, 6, 30, 6);
        validParamsTest(vs, 6, 31, 7);
        validParamsTest(sr, 6, 31, 8);
        validParamsTest(pt, 6, 30, 9);
        validParamsTest(pn, 6, 31, 10);
        validParamsTest(sr, 6, 30, 11);
        validParamsTest(sb, 6, 31, 12);

        validParamsTest(vt, 7, 31, 1);
        validParamsTest(vt, 7, 28, 2);
        validParamsTest(pt, 7, 31, 3);
        validParamsTest(vs, 7, 30, 4);
        validParamsTest(sr, 7, 31, 5);
        validParamsTest(pt, 7, 30, 6);
        validParamsTest(pn, 7, 31, 7);
        validParamsTest(ch, 7, 31, 8);
        validParamsTest(sb, 7, 30, 9);
        validParamsTest(vt, 7, 31, 10);
        validParamsTest(ch, 7, 30, 11);
        validParamsTest(vs, 7, 31, 12);

        validParamsTest(vt, 1, 30, 1);
        validParamsTest(vt, 1, 27, 2);
        validParamsTest(pt, 1, 30, 3);
        validParamsTest(vs, 1, 29, 4);
        validParamsTest(sr, 1, 30, 5);
        validParamsTest(pt, 1, 29, 6);
        validParamsTest(pn, 1, 30, 7);
        validParamsTest(ch, 1, 30, 8);
        validParamsTest(sb, 1, 29, 9);
        validParamsTest(vt, 1, 30, 10);
        validParamsTest(ch, 1, 29, 11);
        validParamsTest(vs, 1, 30, 12);

        validParamsTest(sr, 2, 30, 1);
        validParamsTest(sr, 2, 27, 2);
        validParamsTest(sb, 2, 30, 3);
        validParamsTest(pn, 2, 29, 4);
        validParamsTest(ch, 2, 30, 5);
        validParamsTest(sb, 2, 29, 6);
        validParamsTest(vt, 2, 30, 7);
        validParamsTest(pt, 2, 30, 8);
        validParamsTest(vs, 2, 29, 9);
        validParamsTest(sr, 2, 30, 10);
        validParamsTest(pt, 2, 29, 11);
        validParamsTest(pn, 2, 30, 12);

        validParamsTest(ch, 3, 30, 1);
        validParamsTest(ch, 3, 27, 2);
        validParamsTest(vs, 3, 30, 3);
        validParamsTest(vt, 3, 29, 4);
        validParamsTest(pt, 3, 30, 5);
        validParamsTest(vs, 3, 29, 6);
        validParamsTest(sr, 3, 30, 7);
        validParamsTest(sb, 3, 30, 8);
        validParamsTest(pn, 3, 29, 9);
        validParamsTest(ch, 3, 30, 10);
        validParamsTest(sb, 3, 29, 11);
        validParamsTest(vt, 3, 30, 12);

        validParamsTest(pt, 4, 30, 1);
        validParamsTest(pt, 4, 27, 2);
        validParamsTest(pn, 4, 30, 3);
        validParamsTest(sr, 4, 29, 4);
        validParamsTest(sb, 4, 30, 5);
        validParamsTest(pn, 4, 29, 6);
        validParamsTest(ch, 4, 30, 7);
        validParamsTest(vs, 4, 30, 8);
        validParamsTest(vt, 4, 29, 9);
        validParamsTest(pt, 4, 30, 10);
        validParamsTest(vs, 4, 29, 11);
        validParamsTest(sr, 4, 30, 12);

        validParamsTest(sb, 5, 30, 1);
        validParamsTest(sb, 5, 27, 2);
        validParamsTest(vt, 5, 30, 3);
        validParamsTest(ch, 5, 29, 4);
        validParamsTest(vs, 5, 30, 5);
        validParamsTest(vt, 5, 29, 6);
        validParamsTest(pt, 5, 30, 7);
        validParamsTest(pn, 5, 30, 8);
        validParamsTest(sr, 5, 29, 9);
        validParamsTest(sb, 5, 30, 10);
        validParamsTest(pn, 5, 29, 11);
        validParamsTest(ch, 5, 30, 12);

        validParamsTest(vs, 6, 30, 1);
        validParamsTest(vs, 6, 27, 2);
        validParamsTest(sr, 6, 30, 3);
        validParamsTest(pt, 6, 29, 4);
        validParamsTest(pn, 6, 30, 5);
        validParamsTest(sr, 6, 29, 6);
        validParamsTest(sb, 6, 30, 7);
        validParamsTest(vt, 6, 30, 8);
        validParamsTest(ch, 6, 29, 9);
        validParamsTest(vs, 6, 30, 10);
        validParamsTest(vt, 6, 29, 11);
        validParamsTest(pt, 6, 30, 12);

        validParamsTest(pn, 7, 30, 1);
        validParamsTest(pn, 7, 27, 2);
        validParamsTest(ch, 7, 30, 3);
        validParamsTest(sb, 7, 29, 4);
        validParamsTest(vt, 7, 30, 5);
        validParamsTest(ch, 7, 29, 6);
        validParamsTest(vs, 7, 30, 7);
        validParamsTest(sr, 7, 30, 8);
        validParamsTest(pt, 7, 29, 9);
        validParamsTest(pn, 7, 30, 10);
        validParamsTest(sr, 7, 29, 11);
        validParamsTest(sb, 7, 30, 12);
        ////////////////////////////////////2.3 Внутри класса эквивалентности
        validParamsTest(vs, 1, 11, 3);
        validParamsTest(ch, 1, 12, 4);
        validParamsTest(vs, 1, 13, 5);
        validParamsTest(ch, 1, 14, 6);
        validParamsTest(vs, 1, 15, 7);

        validParamsTest(pn, 2, 11, 3);
        validParamsTest(pt, 2, 12, 4);
        validParamsTest(pn, 2, 13, 5);
        validParamsTest(pt, 2, 14, 6);
        validParamsTest(pn, 2, 15, 7);

        validParamsTest(vt, 3, 11, 3);
        validParamsTest(sb, 3, 12, 4);
        validParamsTest(vt, 3, 13, 5);
        validParamsTest(sb, 3, 14, 6);
        validParamsTest(vt, 3, 15, 7);

        validParamsTest(sr, 4, 11, 3);
        validParamsTest(vs, 4, 12, 4);
        validParamsTest(sr, 4, 13, 5);
        validParamsTest(vs, 4, 14, 6);
        validParamsTest(sr, 4, 15, 7);

        validParamsTest(ch, 5, 11, 3);
        validParamsTest(pn, 5, 12, 4);
        validParamsTest(ch, 5, 13, 5);
        validParamsTest(pn, 5, 14, 6);
        validParamsTest(ch, 5, 15, 7);

        validParamsTest(pt, 6, 11, 3);
        validParamsTest(vt, 6, 12, 4);
        validParamsTest(pt, 6, 13, 5);
        validParamsTest(vt, 6, 14, 6);
        validParamsTest(pt, 6, 15, 7);

        validParamsTest(sb, 7, 11, 3);
        validParamsTest(sr, 7, 12, 4);
        validParamsTest(sb, 7, 13, 5);
        validParamsTest(sr, 7, 14, 6);
        validParamsTest(sb, 7, 15, 7);
        //////////////////////////////////3. Предметная область
        validParamsTest(pt, 5, 1, 1);
        validParamsTest(pn, 5, 15, 3);
        validParamsTest(vt, 5, 1, 6);
        validParamsTest(pt, 5, 31, 12);
        //////////////////////////////////4. Реализация
        validParamsTest(pn, 1, 1, 1);
        validParamsTest(vs, 7, 31, 12);
        invalidDayOfWeekTest(8, 1, 1);
        invalidFoundedDayTest(1, 32, 1);
        invalidMonthTest(1, 1, 13);
        invalidDayOfWeekTest(0, 1, 1);
        invalidFoundedDayTest(1, 0, 1);
        //////////////////////////////////5. Случайные тесты
        validParamsTest(ch, 3, 17, 7);
        validParamsTest(sb, 5, 17, 7);
        validParamsTest(sb, 2, 21, 12);
        validParamsTest(ch, 1, 15, 3);
        validParamsTest(pn, 4, 17, 8);
        validParamsTest(vt, 6, 4, 1);
        validParamsTest(vs, 7, 31, 12);
        validParamsTest(sr, 4, 11, 2);
        validParamsTest(pn, 1, 12, 2);
        validParamsTest(sb, 2, 23, 3);
        validParamsTest(pn, 6, 11, 4);
        validParamsTest(sr, 4, 17, 6);
        validParamsTest(pt, 6, 4, 3);
        validParamsTest(vs, 7, 31, 12);
        validParamsTest(pt, 3, 21, 2);
        validParamsTest(sb, 5, 17, 4);
        validParamsTest(ch, 2, 24, 1);
        validParamsTest(sr, 1, 15, 8);
        validParamsTest(ch, 4, 17, 9);
        validParamsTest(vt, 6, 4, 10);
        validParamsTest(ch, 7, 30, 11);
        validParamsTest(ch, 3, 17, 4);
        validParamsTest(ch, 5, 11, 2);
        validParamsTest(sr, 2, 21, 8);
        validParamsTest(pt, 1, 14, 9);
        validParamsTest(sb, 4, 17, 10);
        validParamsTest(sr, 6, 2, 11);
        //////////////////////////////////6. Другие особые значения
        validParamsTest(sb, 1, 1, 12);
        validParamsTest(vs, 1, 2, 12);
        validParamsTest(pn, 1, 3, 12);
        validParamsTest(vt, 1, 4, 12);
        validParamsTest(sr, 1, 5, 12);
        validParamsTest(ch, 1, 6, 12);
        validParamsTest(pt, 1, 7, 12);
        validParamsTest(sb, 1, 8, 12);
        validParamsTest(vs, 1, 9, 12);
        validParamsTest(pn, 1, 10, 12);
        validParamsTest(vt, 1, 11, 12);
        validParamsTest(sr, 1, 12, 12);
        validParamsTest(ch, 1, 13, 12);
        validParamsTest(pt, 1, 14, 12);
        validParamsTest(sb, 1, 15, 12);
        validParamsTest(vs, 1, 16, 12);
        validParamsTest(pn, 1, 17, 12);
        validParamsTest(vt, 1, 18, 12);
        validParamsTest(sr, 1, 19, 12);
        validParamsTest(ch, 1, 20, 12);
        validParamsTest(pt, 1, 21, 12);
        validParamsTest(sb, 1, 22, 12);
        validParamsTest(vs, 1, 23, 12);
        validParamsTest(pn, 1, 24, 12);
        validParamsTest(vt, 1, 25, 12);
        validParamsTest(sr, 1, 26, 12);
        validParamsTest(ch, 1, 27, 12);
        validParamsTest(pt, 1, 28, 12);
        validParamsTest(sb, 1, 29, 12);
        validParamsTest(vs, 1, 30, 12);
        validParamsTest(pn, 1, 31, 12);
    }

    private void validParamsTest(String s, int a, int b, int c) {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        System.setOut(new PrintStream(output));
        System.setIn(new ByteArrayInputStream((a + " " + b + " " + c).getBytes()));
        main(new String[]{});
        assertEquals("Введите день недели Нового года числом, искомый день и искомый месяц через пробел: "
                + s, output.toString());
    }

    private void invalidDayOfWeekTest(int a, int b, int c) {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        System.setOut(new PrintStream(output));
        System.setIn(new ByteArrayInputStream((a + " " + b + " " + c).getBytes()));
        main(new String[]{});
        assertEquals("Введите день недели Нового года числом, искомый день и искомый месяц через пробел: " +
                "День недели должен быть в пределе 1-7. Введенный день недели: " + a, output.toString());
    }

    private void invalidMonthTest(int a, int b, int c) {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        System.setOut(new PrintStream(output));
        System.setIn(new ByteArrayInputStream((a + " " + b + " " + c).getBytes()));
        main(new String[]{});
        assertEquals("Введите день недели Нового года числом, искомый день и искомый месяц через пробел: " +
                "Месяц должен быть в пределе 1-12. Введенный месяц: " + c, output.toString());
    }

    private void invalidFoundedDayTest(int a, int b, int c) {
        ByteArrayOutputStream output = new ByteArrayOutputStream();
        System.setOut(new PrintStream(output));
        System.setIn(new ByteArrayInputStream((a + " " + b + " " + c).getBytes()));
        main(new String[]{});
        assertEquals("Введите день недели Нового года числом, искомый день и искомый месяц через пробел: " +
                "Искомый день должен быть не меньше 1 и не больше числа дней в заданном месяце. " +
                "Заданный месяц: " + c + " Искомый день: " + b, output.toString());
    }
}