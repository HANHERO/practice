package task1;

import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static task1.Main.s;

public class MainTest {
    private final int min = Integer.MIN_VALUE;
    private final int max = Integer.MAX_VALUE;
    private void a(String e, String a){
        assertEquals(e, a);
    }
    ////////////////////////////////1. Граничные значения области определения
    @Test public void boundaryValues() {
        a("A = -2147483648, B = -2147483648", s(min, min));
        a("A = 2147483647, B = 2147483647", s(max, max));
        a("A = -2147483648, B = 2147483647", s(max, min));
        a("A = 2147483647, B = -2147483648", s(min, max));
        a("A = -2147483648, B = 0", s(0, min));
        a("A = 2147483647, B = 0", s(0, max));
        a("A = 0, B = 2147483647", s(max, 0));
        a("A = 0, B = -2147483648", s(min, 0));
        a("A = -2147483647, B = -2147483648", s(min, min+1));
        a("A = 2147483646, B = 2147483647", s(max, max-1));
        a("A = -2147483647, B = 2147483647", s(max, min+1));
        a("A = 2147483646, B = -2147483648", s(min, max-1));
        a("A = -2147483648, B = -2147483647", s(min+1, min));
        a("A = 2147483647, B = 2147483646", s(max-1, max));
        a("A = 2147483647, B = -2147483647", s(min+1, max));
        a("A = -2147483648, B = 2147483646", s(max-1, min));
    }
    ////////////////////////////////2. Классы эквивалентности
    ////////////////////////////////2.1 Границы классов эквивалентности
    @Test public void first() {
        a("A = -2147483648, B = -2147483648", s(min, min));
        a("A = -1, B = -1", s(-1, -1));
    }
    @Test public void second() {
        a("A = 2147483647, B = 2147483647", s(max, max));
        a("A = 1, B = 1", s(1,1));
    }
    @Test public void third() {
        a("A = -2147483648, B = 2147483647", s(max, min));
        a("A = 0, B = 0", s(0, 0));
    }
    @Test public void fourth() {
        a("A = 2147483647, B = -2147483648", s(min, max));
        a("A = 0, B = 0", s(0, 0));
    }
    ////////////////////////////////2.2 Впритык справа и слева от границы
    @Test public void firstLeftRight() {
        a("A = -2, B = -2", s(-2, -2));
        a("A = 0, B = 0", s(0, 0));
        a("A = -2147483647, B = -2147483647", s(min + 1, min + 1));
    }
    @Test public void secondLeftRight() {
        a("A = 2, B = 2", s(2, 2));
        a("A = 0, B = 0", s(0, 0));
        a("A = 2147483646, B = 2147483646", s(max - 1, max - 1));
    }
    @Test public void thirdLeftRight() {
        a("A = -1, B = 1", s(1, -1));
        a("A = 0, B = 0", s(0, 0));
        a("A = -2147483647, B = 2147483646", s(max - 1, min + 1));
    }
    @Test public void fourthLeftRight() {
        a("A = 1, B = -1", s(-1, 1));
        a("A = 0, B = 0", s(0, 0));
        a("A = 2147483646, B = -2147483647", s(min + 1, max - 1));
    }
    ////////////////////////////////2.3 Внутри класса эквивалентности
    @Test public void internal() {
        a("A = -150, B = -100", s(-100, -150));
        a("A = -746376377, B = -1554486452", s(-1554486452, -746376377));
        a("A = 234, B = 75", s(75, 234));
        a("A = 788556699, B = 565988777", s(565988777, 788556699));
        a("A = -169, B = 85", s(85, -169));
        a("A = -454488845, B = 565988777", s(565988777, -454488845));
        a("A = 244, B = -56", s(-56, 244));
        a("A = 266548744, B = -1565988777", s(-1565988777, 266548744));
    }

    ////////////////////////////////3. Предметная область

    ////////////////////////////////4. Реализация
    @Test public void e1() {
        a("A = 0, B = 0", s(0, 0));
        a("A = 20, B = 0", s(0, 20));
        a("A = 0, B = 100", s(100, 0));
        a("A = 0, B = -30", s(-30, 0));
        a("A = -145, B = 0", s(0, -145));
    }
    ////////////////////////////////5. Случайные значения
    @Test public void random() {
        a("A = 37, B = 55", s(55, 37));
        a("A = 0, B = 1540", s(1540, 0));
        a("A = -4002, B = -26530000", s(-26530000, -4002));
        a("A = 380000000, B = 25", s(25, 380000000));
        a("A = 1000000000, B = 12545556", s(12545556, 1000000000));
        a("A = -99999, B = -265300000", s(-265300000, -99999));
        a("A = 300000007, B = 500000005", s(500000005, 300000007));
        a("A = 0, B = 10000540", s(10000540, 0));
        a("A = -505200, B = -20006530", s(-20006530, -505200));
        a("A = 99999999, B = 265300000", s(265300000, 99999999));
        a("A = 332145687, B = 55456789", s(55456789, 332145687));
        a("A = 21548445, B = 1540", s(1540, 21548445));
        a("A = -15155576, B = -26530000", s(-26530000, -15155576));
        a("A = 380000000, B = 22255115", s(22255115, 380000000));
        a("A = 999999845, B = 12545556", s(12545556, 999999845));
        a("A = -15668845, B = -265300000", s(-265300000, -15668845));
        a("A = 300000007, B = 2046336252", s(2046336252, 300000007));
        a("A = -254569885, B = 10000540", s(10000540, -254569885));
        a("A = -5052200, B = -20006530", s(-20006530, -5052200));
        a("A = -999999999, B = 265300000", s(265300000, -999999999));
    }
}