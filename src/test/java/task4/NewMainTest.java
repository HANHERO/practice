package task4;
import org.junit.Test;

import java.math.BigInteger;
import java.util.ArrayList;

import static org.junit.Assert.assertEquals;
import static task4.NewFib.f;

public class NewMainTest {
    private final ArrayList<TestScenario> testScenarios = new ArrayList<>();
    private void s(String f, int i) { testScenarios.add(new task4.TestScenario(f, i)); }
    private void s(int i) { testScenarios.add(new task4.TestScenario(i)); }

    private void setUpScenarios() {
        /////////////////////////////////////////////////1. Граничные значения области определения.
        s(2000000);
        s(-2000000);
        /////////////////////////////////////////////////2. Классы эквивалентности
        /////////////////////////////////////////////////2.1 Границы классов эквивалентности
        s("-1", -2);
        s("1", 2);
        /////////////////////////////////////////////////2.2 Впритык слева и справа от границы
        s("2", -3);
        s("1", -1);
        s("2", 3);
        s("1", 1);
        /////////////////////////////////////////////////2.3 Внутри класса эквивалентности
        s("354224848179261915075", 100);
        s("-354224848179261915075", -100);
        s("514229", 29);
        s("514229", -29);
        s("498454011879264", 72);
        s("-498454011879264", -72);
        s("6851462981265369536304298877223231154064355390623195419885661484162849735541256952762360871448156142552" +
                "1484607934415856910681316823708551350198968258080863174306483609412033918328687427156400362460532591" +
                "36014253626356840914521594989", 1111);
        s("6851462981265369536304298877223231154064355390623195419885661484162849735541256952762360871448156142552" +
                "1484607934415856910681316823708551350198968258080863174306483609412033918328687427156400362460532591" +
                "36014253626356840914521594989", -1111);
        s("1109867270852690860076488958079459118576674019446044145564503745799076095574057393332591268200228276490" +
                "6185274340684734874403234129028461253", 667);
        s("1109867270852690860076488958079459118576674019446044145564503745799076095574057393332591268200228276490" +
                "6185274340684734874403234129028461253", -667);
        s("280571172992510140037611932413038677189525", 200);
        s("-280571172992510140037611932413038677189525", -200);
        s(56643);
        s(121223);
        s(-32123);
        s(-32313);
        s(32123);
        s(-234251);
        s(122123);
        s(-923423);
        s(53324);
        /////////////////////////////////////////////////3. Предметная область
        s("1", 1);
        s("1", 2);
        s("2", 3);
        s("3", 4);
        s("5", 5);
        s("8", 6);
        s("13", 7);
        s("21", 8);
        s("34", 9);
        s("55", 10);
        s("89", 11);
        s("144", 12);
        s("233", 13);
        s("377", 14);
        s("610", 15);
        s("987", 16);
        s("1597", 17);
        s("2584", 18);
        s("4181", 19);
        s("6765", 20);
        s("1", -1);
        s("-1", -2);
        s("2", -3);
        s("-3", -4);
        s("5", -5);
        s("-8", -6);
        s("13", -7);
        s("-21", -8);
        s("34", -9);
        s("-55", -10);
        s("89", -11);
        s("-144", -12);
        s("233", -13);
        s("-377", -14);
        s("610", -15);
        s("-987", -16);
        s("1597", -17);
        s("-2584", -18);
        s("4181", -19);
        s("-6765", -20);
        /////////////////////////////////////////////////////4. Реализация
        s("1", 1);
        s("0", 0);
        s("1", -1);
        /////////////////////////////////////////////////////5. Случайные значения
        s("4052739537881", 62);
        s("-1304969544928657", -74);
        s("679891637638612258", 87);
        s("37889062373143906", 81);
        s("1134903170", 45);
        s("9227465", 35);
        s("10946", -21);
        s("196418", 27);
        s("-712855466318309181443382098268018842889613342352274572872074853930378980911629426128321940756052135322" +
                "598298992015898128726460694921699457771691515984320016261284047708539269193472721006305258904819077" +
                "521348181926845206674735815971232387638249536923816749213251056890403454686174986395760862161884091" +
                "798970881437670385286614459788315473361126535303345001470206507953492241235332173110519211217429803" +
                "763367497709528116461287139510833577030775288800250183781138908493680222126117339830913550044567933" +
                "141338294582642687418044454756151758321953745440031543610889303727320449152701276454851601928970551" +
                "276833087236466249731315348667943360171392135242746425718386937140586023699165514218313570547142471" +
                "195244250910797778566373979647545861434886508521791770235771333938242778001178590514900515553779927" +
                "879123173220216962404212060506773912850790627804909647464065776368389716980590012646163158298929140" +
                "130329072621945501128695079275252341077222715409225986581641304821366916287036388894353015068552643" +
                "143720713565247550255097451320702063876032819298409345049895661455425000265932109006258500209729817" +
                "640331668751002553617861959880749253762978643851241957264688601418867799692085268794623267547164876" +
                "552793573213716273",-5786);
        s("712855466318309181443382098268018842889613342352274572872074853930378980911629426128321940756052135322" +
                "598298992015898128726460694921699457771691515984320016261284047708539269193472721006305258904819077" +
                "521348181926845206674735815971232387638249536923816749213251056890403454686174986395760862161884091" +
                "798970881437670385286614459788315473361126535303345001470206507953492241235332173110519211217429803" +
                "763367497709528116461287139510833577030775288800250183781138908493680222126117339830913550044567933" +
                "141338294582642687418044454756151758321953745440031543610889303727320449152701276454851601928970551" +
                "276833087236466249731315348667943360171392135242746425718386937140586023699165514218313570547142471" +
                "195244250910797778566373979647545861434886508521791770235771333938242778001178590514900515553779927" +
                "879123173220216962404212060506773912850790627804909647464065776368389716980590012646163158298929140" +
                "130329072621945501128695079275252341077222715409225986581641304821366916287036388894353015068552643" +
                "143720713565247550255097451320702063876032819298409345049895661455425000265932109006258500209729817" +
                "640331668751002553617861959880749253762978643851241957264688601418867799692085268794623267547164876" +
                "552793573213716273",5786);
        s("1110305743234740370307946408479469587191065765054791996071646368707425718183598708601437941426290016048" +
                "2588666841112163277353173884891831619011551234089087896173177341522591344191320625303285536720539310" +
                "2187430699277802091224887613077645490877629118722262585436910441770074038754395211539431860304955509" +
                "5968443200049142162026786442532920379446726515204634885706164205681145256603655105720131107650831412" +
                "8768459375836750947669770735108670470808442189249827445844279870426125617655210279736900243974859043" +
                "07720194812221212329752", 2514);
        s("-1110305743234740370307946408479469587191065765054791996071646368707425718183598708601437941426290016048" +
                "2588666841112163277353173884891831619011551234089087896173177341522591344191320625303285536720539310" +
                "2187430699277802091224887613077645490877629118722262585436910441770074038754395211539431860304955509" +
                "5968443200049142162026786442532920379446726515204634885706164205681145256603655105720131107650831412" +
                "8768459375836750947669770735108670470808442189249827445844279870426125617655210279736900243974859043" +
                "07720194812221212329752", -2514);
        s(50000);
        s(-50000);
        s(654323);
        s(-345322);
        s(1234441);
        s(-97654);
        s(785357);
        s(-744324);
        s(98877);
        s(-676656);
        s(98876);
        s(-12111);
        s(64432);
        s(-54351);
        s(632222);
        s(-52334);
        s(542222);
        s(-87665);
        s(75646);
        s(-46187);
        s(82205);
        s(-141252);
        s(716094);
        s(-903929);
        s(977153);
        s(-830959);
        s(904960);
        s(-521058);
        s(522871);
        s(-522871);
        s(828543);
        s(-602447);
        s(482359);
        s(-882127);
        s(259639);
        s(-11423);
        /////////////////////////////////////////////////////6. Другие особые значения
        s("-336447648764317832666216120051075433103021484606800639065647699746800814421666623681555" +
                "9551363373402558206533268083615937373479048386526826304089246305643188735454436955982749160660209988418393386465273130008883026923567361" +
                "3135117579297437854413752130520504347701602264758318906527890855154366159582987279682987510631200575428783453215515103870818298969791613" +
                "1278562650331954871402142875326981879620469360978799003509623022910263681314931952756302278376284415403605844025721143349611800230912082" +
                "8704608892396232883546150577658327125254609359112820392528539343462090424524892940390170623388899108584106518317336043747073790855263176" +
                "4325733993712871937587746897479926305837065742830161637408969178426378624212835258112820516370298089332099905707920064367426202389783111" +
                "4700540749984592503606335609338838319233867830561364353518921332797329081337326426526339897639227234078829281779535805709936910491754708" +
                "0893184105614632233821746563732124822638309210329770164805472624384237486241145309381220656491403275108664339451751216152654536133311131" +
                "4042436854805106765843493523836959653428071768775328348234345557366719731392746273629108210679280784718035329131176778924659089938635459" +
                "3278945237776744061922403376386740040213303432974969020283281459334188268176838930720036347956231171031012919531697946076327375892535307" +
                "7255237594378843450406771555577905645044301664011946258097221672975861502696844314695203461493229110597067624326851599283470989128470674" +
                "0862008587135016260312071903172086094081298321581077282076353186624611278245537208532365305775956430072517744315051539600905168603220349" +
                "1632226408852488524331580515348496224348482993809050704834824493274537326245677558790891871908036620580095947431500524025327097469953187" +
                "7072437682590741993963226598414749819360928522394503970716544315642132815768890805878318340491743455627052022356484649519611246026831397" +
                "0975069382648706613264507665074611512677522748621598642530711298441182622661057163515069260029861704945425047491378115154139941550671256" +
                "271197133252763631939606902895650288268608362241082050562430701794976171121233066073310059947366875", -10000);

        s("336447648764317832666216120051075433103021484606800639065647699746800814421666623681555" +
                "9551363373402558206533268083615937373479048386526826304089246305643188735454436955982749160660209988418393386465273130008883026923567361" +
                "3135117579297437854413752130520504347701602264758318906527890855154366159582987279682987510631200575428783453215515103870818298969791613" +
                "1278562650331954871402142875326981879620469360978799003509623022910263681314931952756302278376284415403605844025721143349611800230912082" +
                "8704608892396232883546150577658327125254609359112820392528539343462090424524892940390170623388899108584106518317336043747073790855263176" +
                "4325733993712871937587746897479926305837065742830161637408969178426378624212835258112820516370298089332099905707920064367426202389783111" +
                "4700540749984592503606335609338838319233867830561364353518921332797329081337326426526339897639227234078829281779535805709936910491754708" +
                "0893184105614632233821746563732124822638309210329770164805472624384237486241145309381220656491403275108664339451751216152654536133311131" +
                "4042436854805106765843493523836959653428071768775328348234345557366719731392746273629108210679280784718035329131176778924659089938635459" +
                "3278945237776744061922403376386740040213303432974969020283281459334188268176838930720036347956231171031012919531697946076327375892535307" +
                "7255237594378843450406771555577905645044301664011946258097221672975861502696844314695203461493229110597067624326851599283470989128470674" +
                "0862008587135016260312071903172086094081298321581077282076353186624611278245537208532365305775956430072517744315051539600905168603220349" +
                "1632226408852488524331580515348496224348482993809050704834824493274537326245677558790891871908036620580095947431500524025327097469953187" +
                "7072437682590741993963226598414749819360928522394503970716544315642132815768890805878318340491743455627052022356484649519611246026831397" +
                "0975069382648706613264507665074611512677522748621598642530711298441182622661057163515069260029861704945425047491378115154139941550671256" +
                "271197133252763631939606902895650288268608362241082050562430701794976171121233066073310059947366875", 10000);

    }

    @Test
    public void start() {
        setUpScenarios();
        for (TestScenario tS : testScenarios) {
            if(tS.index <= 10000 && tS.index >= -10000){
                assertEquals(new BigInteger(tS.fib), f(tS.index));
            }
            if (tS.index > 10000) {
                assertEquals(f(tS.index - 2).add(f(tS.index - 1)), f(tS.index));
            }
            if (tS.index < -10000 && tS.index % 2 == 0) {
                assertEquals(f(tS.index - 2).add((f(tS.index - 1)).abs()), f(tS.index));
            }
            if (tS.index < -10000 && tS.index % 2 == -1) {
                assertEquals((f(tS.index - 2).abs().add(f(tS.index - 1))), f(tS.index));
            }

        }
        System.out.println(testScenarios.size());
    }


}
